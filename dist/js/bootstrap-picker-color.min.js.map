{"version":3,"sources":["../../src/js/util.js","../../src/js/picker-color.js"],"names":["TRANSITION_END","transitionEndEmulator","duration","_this","this","called","$","one","Util","setTimeout","triggerTransitionEnd","getUID","prefix","Math","random","document","getElementById","getSelectorFromElement","element","selector","getAttribute","hrefAttr","trim","querySelector","err","getTransitionDurationFromElement","transitionDuration","css","transitionDelay","floatTransitionDuration","parseFloat","floatTransitionDelay","split","reflow","offsetHeight","trigger","supportsTransitionEnd","Boolean","isElement","obj","nodeType","typeCheckConfig","componentName","config","configTypes","property","Object","prototype","hasOwnProperty","call","expectedTypes","value","valueType","toString","match","toLowerCase","RegExp","test","Error","toUpperCase","findShadowRoot","documentElement","attachShadow","getRootNode","ShadowRoot","parentNode","root","fn","emulateTransitionEnd","event","special","bindType","delegateType","handle","target","is","handleObj","handler","apply","arguments","NAME","DATA_KEY","JQUERY_NO_CONFLICT","Default","input","DefaultType","Event","CHANGE","COLOR_REGEX_STR","COLOR_REGEX","PickerColor","_config","_getConfig","_element","_input","_modifyElement","_addElementListener","_objectSpread","on","e","_inputChanges","val","setCustomValidity","setAttribute","_jQueryInterface","relatedTarget","each","data","Constructor","noConflict"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n      return undefined // eslint-disable-line no-undefined\n    }\n  }\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true\n  })\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration)\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      // eslint-disable-next-line no-bitwise\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target')\n\n    if (!selector || selector === '#') {\n      const hrefAttr = element.getAttribute('href')\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      return document.querySelector(selector) ? selector : null\n    } catch (err) {\n      return null\n    }\n  },\n\n  getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0\n    }\n\n    // Get transition-duration of the element\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  // TODO: Remove in v5\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property]\n        const value         = config[property]\n        const valueType     = value && Util.isElement(value)\n          ? 'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  }\n}\n\nsetTransitionEndSupport()\n\nexport default Util\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap Picker Color (v0.0.2): picker-color.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME               = 'pickercolor'\nconst VERSION            = '0.0.2'\nconst DATA_KEY           = 'bs.pickercolor'\nconst EVENT_KEY          = `.${DATA_KEY}`\nconst DATA_API_KEY       = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n    input       : null,\n}\n\nconst DefaultType = {\n    input       : '(element|string)',\n}\n\nconst Event = {\n    CHANGE      : `change${EVENT_KEY}${DATA_API_KEY}`\n}\n\nconst COLOR_REGEX_STR = '^#[a-fA-F0-9]{6}'\nconst COLOR_REGEX = new RegExp(COLOR_REGEX_STR)\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass PickerColor {\n\n    constructor(element, config) {\n        this._config    = this._getConfig(config)\n        this._element   = element\n        this._input     = config.input\n\n        if(typeof config.input === 'string')\n            this._input = document.querySelector(config.input)\n\n        this._modifyElement()\n        this._addElementListener()\n\n        this._input.value = this._element.value\n    }\n\n    // Getters\n\n    static get VERSION() {\n        return VERSION\n    }\n\n    static get Default() {\n        return Default\n    }\n\n    // Private\n\n    _getConfig(config) {\n        config = {\n          ...Default,\n          ...config\n        }\n        Util.typeCheckConfig(NAME, config, DefaultType)\n        return config\n    }\n\n    _addElementListener(){\n        $(this._element).on(Event.CHANGE, e => {\n            this._input.value = e.target.value.toUpperCase()\n            this._inputChanges()\n        })\n\n        $(this._input).on(Event.CHANGE, e => this._inputChanges())\n    }\n\n    _inputChanges(){\n        let val = this._input.value\n        if(COLOR_REGEX.test(val)){\n            this._input.setCustomValidity('')\n            this._element.value = this._input.value\n        }else{\n            this._input.setCustomValidity('Please enter valid HEX color')\n        }\n    }\n\n    _modifyElement(){\n        let re = this._input.getAttribute('pattern')\n        if(!re)\n            this._input.setAttribute('pattern', COLOR_REGEX_STR)\n    }\n\n    // Static\n\n    static _jQueryInterface(config, relatedTarget) {\n        return this.each(function () {\n            let data = $(this).data(DATA_KEY)\n            const _config = {\n                ...Default,\n                ...$(this).data(),\n                ...typeof config === 'object' && config ? config : {}\n            }\n\n            if (!data) {\n                data = new PickerColor(this, _config)\n                $(this).data(DATA_KEY, data)\n            }\n        })\n    }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = PickerColor._jQueryInterface\n$.fn[NAME].Constructor = PickerColor\n$.fn[NAME].noConflict = () => {\n    $.fn[NAME] = JQUERY_NO_CONFLICT\n    return PickerColor._jQueryInterface\n}\n\nexport default PickerColor"]}